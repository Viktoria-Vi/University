    static double krt(double a, double k, double d) {
        if (a < 0) {
            return 0;
        }
        return krtH(a, k, d, a); //a für x_n weil, x0 gleich a ist
    }

        static double krtH(double a, double k, double d, double x_n) {
            double x_n_plusOne = (1.0 / k) * ((k - 1.0) * x_n + (a / Math.pow(x_n, k - 1.0))); //die Formel für x_n+1 in eine Variable gefasst
            if ((x_n - x_n_plusOne) < d) {
                return x_n;
            }
            return krtH(a, k, d, x_n_plusOne);
        }

        static void krtHTest() {
            double k = 1.0; //gibt den Grad der Wurzel an
            double d = 0.00001; //die Toleranz von delta
            for (double a = 2.0; a <= 16.0; a *= 2) {  //rechnet in jedem schritt 2^a+1 ^^ bis 16
                System.out.println(krt(a, k, d));
                k++; //erhöht den Grad um 1
                d *= d;

            }
        }


